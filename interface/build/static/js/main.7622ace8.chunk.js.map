{"version":3,"sources":["actions/index.js","reducers/reducer_notes.js","reducers/index.js","reducers/reducer_categories.js","containers/Category.js","containers/Notes.js","components/Root.js","components/Alert.js","components/Auth.js","components/Signin.js","components/SecuredRoute.js","components/Application.js","serviceWorker.js","index.js"],"names":["GET_NOTES_LIST","GET_NOTES_LIST_ERROR","fetchNotesList","_x","_fetchNotesList","apply","this","arguments","_callee","page","response","data","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","abrupt","type","payload","t0","stop","fetchCategories","_x2","_fetchCategories","_callee2","_context2","rootReducer","combineReducers","notesList","state","length","undefined","action","Object","objectSpread","error","noteCategories","Category","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","options","target","selected","i","l","push","value","onCategoriesChange","categories","newCategory","items","bind","assertThisInitialized","addItem","map","v","react_default","createElement","key","setState","toConsumableArray","concat","_this2","className","name","onChange","onClick","multiple","Component","connect","dispatch","bindActionCreators","Notes","content","addNote","preventDefault","method","headers","Content-Type","body","JSON","stringify","console","log","setTimeout","window","scrollTo","document","scrollHeight","splitCatrgories","class","err","_this3","_this4","onSubmit","containers_Category","placeholder","rows","Root","containers_Notes","withRouter","Alert","_ref","message","auth","Math","floor","Date","getTime","sessionStorage","getItem","token","split","parse","atob","setItem","userID","expireDate","cookie","toUTCString","clear","Signin","email","password","alert","sign","Auth","signIn","history","components_Alert","SecuredRoute","component","path","exact","Route","render","isAuthenticated","location","href","App","store","es","BrowserRouter","components_SecuredRoute","Boolean","hostname","match","applyMiddleware","ReduxPromise","createStore","createStoreWithMiddleware","reducers","ReactDOM","Application","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAAaA,EAAiB,iBACjBC,EAAuB,uBAK7B,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA8BC,GAA9B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBC,MAAK,kBAFzB,cAEGR,EAFHK,EAAAI,KAAAJ,EAAAE,KAAA,EAGcP,EAASU,OAHvB,cAGCT,EAHDI,EAAAI,KAAAJ,EAAAM,OAAA,SAKI,CACLC,KAAMtB,EACNuB,QAASZ,IAPR,eAAAI,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAM,OAAA,SAUI,CACLC,KAAMrB,EACNsB,QAAOR,EAAAS,KAZN,yBAAAT,EAAAU,SAAAjB,EAAAF,KAAA,oCAiBA,SAAeoB,EAAtBC,GAAA,OAAAC,EAAAvB,MAAAC,KAAAC,sDAAO,SAAAsB,EAA+BpB,GAA/B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAEoBC,MAAK,sBAFzB,cAEGR,EAFHoB,EAAAX,KAAAW,EAAAb,KAAA,EAGcP,EAASU,OAHvB,cAGCT,EAHDmB,EAAAX,KAAAW,EAAAT,OAAA,SAKI,CACLC,KAAMtB,EACNuB,QAASZ,IAPR,eAAAmB,EAAAd,KAAA,GAAAc,EAAAN,GAAAM,EAAA,SAAAA,EAAAT,OAAA,SAUI,CACLC,KAAMrB,EACNsB,QAAOO,EAAAN,KAZN,yBAAAM,EAAAL,SAAAI,EAAAvB,KAAA,oCCpBP,ICOeyB,EALKC,YAAgB,CAClCC,UDHF,WAA6C,IAApBC,EAAoB3B,UAAA4B,OAAA,QAAAC,IAAA7B,UAAA,GAAAA,UAAA,GAAZ,GAAI8B,EAAQ9B,UAAA4B,OAAA,EAAA5B,UAAA,QAAA6B,EAE3C,OAAQC,EAAOf,MACb,KAAKtB,EACH,OAAOsC,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBd,KAAMiB,EAAOd,UAClC,KAAKtB,EACH,OAAOqC,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBM,MAAOH,EAAOd,UAKrC,OAAOW,GCPPO,eCJF,WAA6C,IAApBP,EAAoB3B,UAAA4B,OAAA,QAAAC,IAAA7B,UAAA,GAAAA,UAAA,GAAZ,GAAI8B,EAAQ9B,UAAA4B,OAAA,EAAA5B,UAAA,QAAA6B,EAE3C,OAAQC,EAAOf,MACb,IHH6B,oBGI3B,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBd,KAAMiB,EAAOd,UAClC,IHJmC,0BGKjC,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GAAKJ,EAAZ,CAAmBM,MAAOH,EAAOd,UAKrC,OAAOW,0FCRHQ,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAhC,KAAAoC,IACjBE,EAAAN,OAAAQ,EAAA,EAAAR,CAAAhC,KAAAgC,OAAAS,EAAA,EAAAT,CAAAI,GAAAM,KAAA1C,KAAMqC,KAcRM,aAAe,SAACC,GAGd,IAFA,IAAIC,EAAUD,EAAEE,OAAOD,QACnBE,EAAW,GACNC,EAAI,EAAGC,EAAIJ,EAAQhB,OAAQmB,EAAIC,EAAGD,IACrCH,EAAQG,GAAGD,UACbA,EAASG,KAAK,CAACC,MAAON,EAAQG,GAAGG,QAIrCb,EAAKD,MAAMe,mBAAmBL,IArB9BT,EAAKV,MAAQ,CAEXyB,WAAY,GACZC,YAAa,GACbP,SAAU,IAGZT,EAAKiB,MAAQjB,EAAKiB,MAAMC,KAAXxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAM,KACbA,EAAKoB,QAAUpB,EAAKoB,QAAQF,KAAbxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAM,KAXEA,uEA4BjB,IACE,OAAOtC,KAAK4B,MAAMyB,WAAWM,IAAI,SAACC,EAAGZ,GACnC,OAAOa,EAAAtD,EAAAuD,cAAA,UAAQC,IAAKf,EAAGG,MAAOS,EAAET,OAAQS,EAAET,SAE5C,MAAOjB,GACP,0CAKFlC,KAAKgE,SAAS,CACZX,WAAWrB,OAAAiC,EAAA,EAAAjC,CAAKhC,KAAK4B,MAAMyB,YAAjBa,OAAA,CAA6B,CAAEf,MAAOnD,KAAK4B,MAAM0B,iBAG7DtD,KAAK4B,MAAM0B,YAAc,oCAGlB,IAAAa,EAAAnE,KACP,OACE6D,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,cACbP,EAAAtD,EAAAuD,cAAA,YAAUM,UAAU,YAClBP,EAAAtD,EAAAuD,cAAA,4BACAD,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,eACbP,EAAAtD,EAAAuD,cAAA,QAAMM,UAAU,qBAAoBP,EAAAtD,EAAAuD,cAAA,KAAGM,UAAU,iBACjDP,EAAAtD,EAAAuD,cAAA,SAAOM,UAAU,oBAAoBC,KAAK,YAAYrD,KAAK,OAAOmC,MAAOnD,KAAK4B,MAAM0B,YAAagB,SAAU,SAAA1B,GAAC,OAAIuB,EAAKH,SAAS,CAACV,YAAaV,EAAEE,OAAOK,WACrJU,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,sBACbP,EAAAtD,EAAAuD,cAAA,SAAO9C,KAAK,SAASoD,UAAU,mBAAmBC,KAAK,YAAYlB,MAAM,IAAIoB,QAASvE,KAAK0D,YAI/FG,EAAAtD,EAAAuD,cAAA,UAAQU,UAAQ,EAACF,SAAUtE,KAAK2C,aAAc0B,KAAK,cAChDrE,KAAKuD,kBA5DKkB,aA4ERC,kBARf,SAAyB9C,GACvB,MAAO,CAAEO,eAAgBP,EAAMO,eAAerB,OAGhD,SAA4B6D,GAC1B,OAAOC,YAAmB,CAAExD,mBAAmBuD,IAGlCD,CAA6CtC,GC3EtDyC,cAEJ,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAhC,KAAA6E,IACjBvC,EAAAN,OAAAQ,EAAA,EAAAR,CAAAhC,KAAAgC,OAAAS,EAAA,EAAAT,CAAA6C,GAAAnC,KAAA1C,KAAMqC,KAEDT,MAAQ,CACXkD,QAAS,GACTzB,WAAY,IAGdf,EAAKyC,QAAUzC,EAAKyC,QAAQvB,KAAbxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAM,KACfA,EAAKc,mBAAqBd,EAAKc,mBAAmBI,KAAxBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAM,KATTA,mFAajBtC,KAAKqC,MAAMzC,eAAe,4EAIdgD,sEACZA,EAAEoC,iBACGhF,KAAK4B,MAAMkD,kFAKSlE,MAAM,YAAa,CACxCqE,OAAQ,MACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAER,QAAS9E,KAAK4B,MAAMkD,QAASzB,WAAYrD,KAAK4B,MAAMyB,6BAE7ErD,KAAKgE,SAAS,CAAEc,QAAS,KACzB9E,KAAKqC,MAAMzC,eAAe,sDAG1B2F,QAAQC,IAAR/E,EAAAS,qJAIQ,IAAAiD,EAAAnE,KAEV,QAA6B8B,IAAzB9B,KAAKqC,MAAMV,UAIf,OADA8D,WAAW,kBAAMC,OAAOC,SAAS,EAAGC,SAASR,KAAKS,eAAe,KAC1D7F,KAAKqC,MAAMV,UAAUgC,IAAI,SAACtD,EAAM2C,GACrC,OAAOa,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,YAAYL,IAAKf,GAAI3C,EAAKyE,QAAzC,IAAmDX,EAAK2B,gBAAgBzF,EAAKgD,uDAIxEE,GACd,IACE,OAAOA,EAAMI,IAAI,SAACtD,EAAM2C,GACtB,OAAOa,EAAAtD,EAAAuD,cAAA,QAAMiC,MAAM,mBAAmB1F,EAAK8C,SAE7C,MAAO6C,GACP,MAAO,+CAIQ3C,GAAY,IAAA4C,EAAAjG,KAC7BA,KAAKgE,SAAS,CAAEX,eAChBoC,WAAW,WAAQF,QAAQC,IAAIS,EAAKrE,MAAMyB,aAAe,sCAGlD,IAAA6C,EAAAlG,KACP,OACE6D,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,SACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,QACZpE,KAAK2B,aAERkC,EAAAtD,EAAAuD,cAAA,QAAMM,UAAU,WAAW+B,SAAUnG,KAAK+E,SACxClB,EAAAtD,EAAAuD,cAAA,aACED,EAAAtD,EAAAuD,cAACsC,EAAD,CAAUhD,mBAAoBpD,KAAKoD,qBACnCS,EAAAtD,EAAAuD,cAAA,YAAUO,KAAK,UAAUgC,YAAY,kBAAkBC,KAAK,IAAInD,MAAOnD,KAAK4B,MAAMkD,QAASR,SAAU,SAAA1B,GAAC,OAAIsD,EAAKlC,SAAS,CAACc,QAASlC,EAAEE,OAAOK,WAC3IU,EAAAtD,EAAAuD,cAAA,UAAQ9C,KAAK,SAASoD,UAAU,kBAAhC,oBA3EQK,aA4FLC,kBARf,SAAyB9C,GACvB,MAAO,CAAED,UAAWC,EAAMD,UAAUb,OAGtC,SAA4B6D,GAC1B,OAAOC,YAAmB,CAAEhF,kBAAkB+E,IAGjCD,CAA6CG,GC9FtD0B,mLAGF,OACE1C,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,kBACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,UACbP,EAAAtD,EAAAuD,cAAA,UAAQM,UAAU,UAAlB,MAEFP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,UACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,wDACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,WACbP,EAAAtD,EAAAuD,cAAC0C,EAAD,iBAXK/B,aAoBJgC,cAAWF,GCVXG,EAbD,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACf,MAAgB,KAAZA,QAA8B9E,IAAZ8E,EACZ,GAGR/C,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,SACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,kBACZwC,KCYMC,EAFF,8GAjBT,OAAOC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQC,eAAeC,QAAQ,6CAGnEC,GACL,IAAI/G,EAAO+G,EAAMC,MAAM,KAAK,GAC5BhH,EAAOgF,KAAKiC,MAAMC,KAAKlH,IACvB6G,eAAeM,QAAQ,SAAUnH,EAAKoH,QACtCP,eAAeM,QAAQ,aAAcnH,EAAKqH,YAC1CR,eAAeM,QAAQ,QAASJ,GAChCxB,SAAS+B,OAAT,SAAAzD,OAA2BkD,EAA3B,cAAAlD,OAA6C,IAAI8C,KAAqB,IAAhB3G,EAAKqH,YAAiBE,cAA5E,8CAIAV,eAAeW,kBCVbC,cACJ,SAAAA,EAAYzF,GAAO,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAhC,KAAA8H,IACjBxF,EAAAN,OAAAQ,EAAA,EAAAR,CAAAhC,KAAAgC,OAAAS,EAAA,EAAAT,CAAA8F,GAAApF,KAAA1C,KAAMqC,KAEDT,MAAQ,CACXmG,MAAO,GACPC,SAAU,GACVC,MAAO,IAGT3F,EAAK4F,KAAO5F,EAAK4F,KAAK1E,KAAVxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAM,KATKA,4GAWRM,kFACTA,EAAEoC,mCAGuBpE,MAAM,mBAAoB,CAC/CqE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnByC,MAAO/H,KAAK4B,MAAMmG,MAClBC,SAAUhI,KAAK4B,MAAMoG,2BALnB5H,kBAQaA,EAASU,kBAAtBT,UACI+G,6BACF/G,UACR8H,EAAKC,OAAO/H,EAAK+G,OACjBpH,KAAKqC,MAAMgG,QAAQnF,KAAK,uDAGxBlD,KAAKgE,SAAS,CAAEiE,MAAOxH,EAAAS,GAAM0F,wJAIxB,IAAAzC,EAAAnE,KACP,OACE6D,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,kBACbP,EAAAtD,EAAAuD,cAACwE,EAAD,CAAO1B,QAAS5G,KAAK4B,MAAMqG,QAC3BpE,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,UACbP,EAAAtD,EAAAuD,cAAA,UAAQM,UAAU,UAAlB,MAEFP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,UACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,wDACbP,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,WACbP,EAAAtD,EAAAuD,cAAA,QAAMqC,SAAUnG,KAAKkI,MACjBrE,EAAAtD,EAAAuD,cAAA,SAAO9C,KAAK,QAAQqD,KAAK,QAAQgC,YAAY,QAAQlD,MAAOnD,KAAK4B,MAAMmG,MAAOzD,SAAU,SAAA1B,GAAC,OAAIuB,EAAKH,SAAS,CAAC+D,MAAOnF,EAAEE,OAAOK,WAC5HU,EAAAtD,EAAAuD,cAAA,SAAO9C,KAAK,WAAWqD,KAAK,WAAWgC,YAAY,WAAWlD,MAAOnD,KAAK4B,MAAMoG,SAAU1D,SAAU,SAAA1B,GAAC,OAAIuB,EAAKH,SAAS,CAACgE,SAAUpF,EAAEE,OAAOK,WAC3IU,EAAAtD,EAAAuD,cAAA,UAAQ9C,KAAK,SAASoD,UAAU,kBAAhC,oBAhDGK,aA0DNgC,cAAWqB,GC9CXS,MAbf,SAAsBlG,GAAO,IACToC,EAA0BpC,EAArCmG,UAAsBC,EAAepG,EAAfoG,KAAMC,EAASrG,EAATqG,MACnC,OACE7E,EAAAtD,EAAAuD,cAAC6E,EAAA,EAAD,CAAOD,MAAOA,EAAOD,KAAMA,EAAMG,OAAQ,WACrC,OAAK/B,EAAKgC,kBAIHhF,EAAAtD,EAAAuD,cAACW,EAAD,OAHHiB,OAAOoD,SAASC,KAAO,eAClBlF,EAAAtD,EAAAuD,cAAA,iBCmBFkF,EApBH,SAAArC,GAAA,IAAGsC,EAAHtC,EAAGsC,MAAH,OACVpF,EAAAtD,EAAAuD,cAACoF,EAAA,EAAD,CAAUD,MAAOA,GACfpF,EAAAtD,EAAAuD,cAACqF,EAAA,EAAD,KACEtF,EAAAtD,EAAAuD,cAAA,OAAKM,UAAU,iBAMXP,EAAAtD,EAAAuD,cAACsF,EAAD,CAAcV,OAAO,EAAMD,KAAK,IAAID,UAAWjC,IAC/C1C,EAAAtD,EAAAuD,cAAC6E,EAAA,EAAD,CAAOF,KAAK,eAAeD,UAAWV,cCP5BuB,QACW,cAA7B3D,OAAOoD,SAASQ,UAEe,UAA7B5D,OAAOoD,SAASQ,UAEhB5D,OAAOoD,SAASQ,SAASC,MACvB,2DCTN,IACMN,EAD4BO,YAAgBC,IAAhBD,CAA8BE,IAClDC,CAA0BC,GAExCC,IAASjB,OAAO/E,EAAAtD,EAAAuD,cAACgG,EAAD,CAAKb,MAAQA,IAAYrD,SAASmE,eAAe,SDqH3D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7622ace8.chunk.js","sourcesContent":["export const GET_NOTES_LIST = 'GET_NOTES_LIST';\nexport const GET_NOTES_LIST_ERROR = 'GET_NOTES_LIST_ERROR';\n\nexport const GET_CATEGORY_LIST = 'GET_CATEGORY_LIST';\nexport const GET_CATEGORY_LIST_ERROR = 'GET_CATEGORY_LIST_ERROR';\n\nexport async function fetchNotesList(page) {\n  try {\n    const response = await fetch(`/api/note/list`);\n    let data = await response.json();\n\n    return {\n      type: GET_NOTES_LIST,\n      payload: data\n    }\n  } catch (error) {\n    return {\n      type: GET_NOTES_LIST_ERROR,\n      payload: error\n    }\n  }\n}\n\nexport async function fetchCategories(page) {\n  try {\n    const response = await fetch(`/api/category/list`);\n    let data = await response.json();\n\n    return {\n      type: GET_NOTES_LIST,\n      payload: data\n    }\n  } catch (error) {\n    return {\n      type: GET_NOTES_LIST_ERROR,\n      payload: error\n    }\n  }\n}","import { GET_NOTES_LIST, GET_NOTES_LIST_ERROR } from '../actions';\n\n\nexport default function (state = {}, action) {\n\n  switch (action.type) {\n    case GET_NOTES_LIST:\n      return { ...state, json: action.payload };\n    case GET_NOTES_LIST_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      /* code */\n      break;\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport reducerNotes from './reducer_notes';\nimport reducerCategories from './reducer_categories';\n\n\nconst rootReducer = combineReducers({\n  notesList: reducerNotes,\n  noteCategories: reducerCategories\n});\n\nexport default rootReducer;\n","import { GET_CATEGORY_LIST, GET_CATEGORY_LIST_ERROR } from '../actions';\n\n\nexport default function (state = {}, action) {\n\n  switch (action.type) {\n    case GET_CATEGORY_LIST:\n      return { ...state, json: action.payload };\n    case GET_CATEGORY_LIST_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      /* code */\n      break;\n  }\n  return state;\n}\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { fetchCategories } from '../actions/index';\n\nclass Category extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      //   content: ''\n      categories: [],\n      newCategory: '',\n      selected: []\n    }\n\n    this.items = this.items.bind(this)\n    this.addItem = this.addItem.bind(this)\n\n  }\n\n  handleChange = (e) => {\n    var options = e.target.options;\n    var selected = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        selected.push({value: options[i].value});\n      }\n    }\n\n    this.props.onCategoriesChange(selected)\n  };\n\n  items() {\n    try {\n      return this.state.categories.map((v, i) => {\n        return <option key={i} value={v.value}>{v.value}</option>\n      })\n    } catch (error) {\n      return\n    }\n  }\n\n  addItem() {\n    this.setState({\n      categories: [...this.state.categories, { value: this.state.newCategory }]\n    })\n\n    this.state.newCategory = '';\n  }\n\n  render() {\n    return (\n      <div className=\"categories\">\n        <fieldset className=\"fieldset\">\n          <legend>Categories</legend>\n          <div className=\"input-group\">\n            <span className=\"input-group-label\"><i className=\"fas fa-tags\"></i></span>\n            <input className=\"input-group-field\" name=\"catergory\" type=\"text\" value={this.state.newCategory} onChange={e => this.setState({newCategory: e.target.value})}/>\n            <div className=\"input-group-button\">\n              <input type=\"button\" className=\"button secondary\" name=\"addButton\" value=\"+\" onClick={this.addItem}/>\n            </div>\n          </div>\n\n          <select multiple onChange={this.handleChange} name=\"categories\" >\n            {this.items()}\n          </select>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { noteCategories: state.noteCategories.json }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchCategories }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { fetchNotesList } from '../actions/index';\nimport Category from './Category'\n\nclass Notes extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      content: '',\n      categories: []\n    }\n\n    this.addNote = this.addNote.bind(this)\n    this.onCategoriesChange = this.onCategoriesChange.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.fetchNotesList('')\n\n  }\n\n  async addNote(e) {\n    e.preventDefault();\n    if (!this.state.content) {\n      return\n    }\n\n    try {\n      const response = await fetch('/api/note', {\n        method: 'put',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ content: this.state.content, categories: this.state.categories })\n      });\n      this.setState({ content: '' })\n      this.props.fetchNotesList('')\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  notesList() {\n\n    if (this.props.notesList === undefined) {\n      return\n    }\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 100)\n    return this.props.notesList.map((data, i) => {\n      return <div className=\"note-item\" key={i}>{data.content} {this.splitCatrgories(data.categories)}</div>\n    })\n  }\n\n  splitCatrgories(items) {\n    try {\n      return items.map((data, i) => {\n        return <span class=\"label secondary\">{data.value}</span>\n      })\n    } catch (err) {\n      return ''\n    }\n  }\n\n  onCategoriesChange(categories) {\n    this.setState({ categories })\n    setTimeout(() => { console.log(this.state.categories) }, 2000)\n  }\n\n  render() {\n    return (\n      <div className=\"notes\">\n        <div className=\"list\">\n          {this.notesList()}\n        </div>\n        <form className=\"add-note\" onSubmit={this.addNote}>\n          <label>\n            <Category onCategoriesChange={this.onCategoriesChange}/>\n            <textarea name=\"content\" placeholder=\"Write down here\" rows=\"3\" value={this.state.content} onChange={e => this.setState({content: e.target.value})}></textarea>\n            <button type=\"submit\" className=\"button primary\">Submit</button>\n          </label>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { notesList: state.notesList.json }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchNotesList }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Notes from '../containers/Notes';\n\nclass Root extends Component {\n  \n  render() {\n    return (\n      <div className=\"grid-container\">\n        <div className=\"grid-x\">\n          <header className=\"header\"> </header>\n        </div>\n        <div className=\"grid-x\">\n          <div className=\"cell medium-8 medium-offset-2 large-6 large-offset-3\">\n            <div className=\"portlet\">\n              <Notes />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Root);\n","import React from 'react';\n\nconst Alert = ({ message }) => {\n  if (message === '' || message === undefined) {\n    return ('')\n  }\n  return (\n    <div className=\"alert\">\n      <div className=\"grid-container\">\n        {message}\n      </div>\n    </div>\n  )\n}\n\nexport default Alert\n","class Auth {\n  isAuthenticated() {\n    return Math.floor(new Date().getTime() / 1000) < sessionStorage.getItem('expireDate');\n  }\n\n  signIn(token) {\n    var data = token.split(\".\")[1]\n    data = JSON.parse(atob(data))\n    sessionStorage.setItem('userID', data.userID);\n    sessionStorage.setItem('expireDate', data.expireDate);\n    sessionStorage.setItem('token', token);\n    document.cookie = `token=${token}; expires=${new Date(data.expireDate*1000).toUTCString()}; path=/`;\n  }\n\n  signOut() {\n    sessionStorage.clear()\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Alert from './Alert';\nimport Auth from './Auth';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      alert: ''\n    }\n\n    this.sign = this.sign.bind(this)\n  }\n  async sign(e) {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('/api/user/signin', {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      })\n      const data = await response.json()\n      if (!data.token)\n        throw data\n      Auth.signIn(data.token)\n      this.props.history.push('/')\n\n    } catch (error) {\n      this.setState({ alert: error.message })\n    }\n\n  }\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <Alert message={this.state.alert}/>\n        <div className=\"grid-x\">\n          <header className=\"header\"> </header>\n        </div>\n        <div className=\"grid-x\">\n          <div className=\"cell medium-4 medium-offset-4 large-4 large-offset-4\">\n            <div className=\"portlet\">\n              <form onSubmit={this.sign}>\n                  <input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={e => this.setState({email: e.target.value})} />\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={e => this.setState({password: e.target.value})} />\n                  <button type=\"submit\" className=\"button primary\">Sign</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport auth from './Auth';\n\nfunction SecuredRoute(props) {\n  const {component: Component, path, exact} = props;\n  return (\n    <Route exact={exact} path={path} render={() => {\n        if (!auth.isAuthenticated()) {\n            window.location.href = '/user/signin'\n          return <div></div>;\n        }\n        return <Component />\n    }} />\n  );\n}\n\nexport default SecuredRoute;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Root from './Root';\nimport Signin from './Signin';\nimport SecuredRoute from './SecuredRoute';\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <div className=\"app-container\">\n          {/* <SecuredRoute path=\"/projects\" component={Projects} />\n          <SecuredRoute path=\"/project/:id\" component={Project} />\n          <Route path=\"/user/signin\" component={Signin} />\n          <Route path=\"/user/signup\" component={Signup} /> */}\n          {/* <Redirect from=\"/\" to=\"/notes\" /> */}\n          <SecuredRoute exact={true} path=\"/\" component={Root} />\n          <Route path=\"/user/signin\" component={Signin} />\n      </div>\n    </Router>\n  </Provider>\n)\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxPromise from 'redux-promise';\nimport reducers from './reducers';\nimport App from './components/Application';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nReactDOM.render(<App store={ store } />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}